//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Xml;

public class Activités
{

    private int idActivité;
    private DateTime heureDebut;
    private string texteDescriptif;
    private string typeActivite;
    private DateTime heureFin;
    private string statutActivite;
    private static int nbActivité = 0;
    private string nomActivité;
    private List<Astronautes> listeAstronautes = new List<Astronautes>();
    //Constructeur par défaut
	public Activités(string nom, DateTime hDebut, DateTime hFin)
    {
        nbActivité++;
        nomActivité = nom;
        idActivité = nbActivité;
        heureDebut = hDebut;
        heureFin = hFin;
    }



  

    //Accesseurs//
    public string GetNomActivité
    {
        get { return nomActivité; }
        set { nomActivité = value; }
    }

    public string conversionDateMars(DateTime tempDateDebutPlanning)
    {
        DateTime dateDebutPlanning = tempDateDebutPlanning;


        TimeSpan ecart = heureDebut - dateDebutPlanning;


        int intervalleTempsDebutActivite = ecart.Days * 60 * 24 + ecart.Hours * 60 + ecart.Minutes + ecart.Days * 40;

        double doubleIntervalleTempsDebutActivite = intervalleTempsDebutActivite - (ecart.Days * 60 * 24);

        int horaireDebutHeure = (int)Math.Truncate(doubleIntervalleTempsDebutActivite / 60);
        int horaireDebutMinute = (int)doubleIntervalleTempsDebutActivite - horaireDebutHeure * 60;

        string conversionDebut = horaireDebutHeure.ToString() + "h"+ horaireDebutMinute.ToString();

        return conversionDebut;

    }



	public DateTime getHeureDebut
	{
		get { return heureDebut; }
		set { heureDebut = value; }
	}

	public DateTime GetheureFin
	{
		get{return heureFin;}
		set{heureFin=value;}
	}

	public string GettexteDescriptif
	{
		get{return texteDescriptif;}
		set{texteDescriptif=value;}
	}

	public string GettypeActivite
	{
		get{return typeActivite;}
		set{typeActivite=value;}
	}

	public string GetstatutActivite
	{
		get{return statutActivite; }
		set{statutActivite =value;}
	}

	public virtual List<Astronautes> GetlisteAstronautes
	{
        get { return listeAstronautes; }
        set { listeAstronautes = value; }
	}

    public string GetnomActivite
    {
        get{return nomActivité;}
        set { nomActivité = value; }
    }
    public int GetnbActivité
    {
        get { return nbActivité; }
        set { nbActivité = value; }
    }



    //FinAccesseurs

	public virtual void RenvoieActiviteParMotCle()
	{
		throw new System.NotImplementedException();
	}

	public virtual void ajouterLieu()
	{
		throw new System.NotImplementedException();
	}

	public virtual void supprimerLieu()
	{
		throw new System.NotImplementedException();
	}

	public virtual void ajouterAstronautes()
	{
		throw new System.NotImplementedException();
	}

	public virtual void supprimerAstronautes()
	{
		throw new System.NotImplementedException();
	}

	public virtual void getListeAstronautes()
	{
		throw new System.NotImplementedException();
	}

	public virtual void getLieu()
	{
		throw new System.NotImplementedException();
	}


    
public void enregistrerActivites() // Permet d'enregistrer tous les attributs de toutes les classes de tout le projet
{   
     XmlDocument xmlDoc = new XmlDocument ();
	 XmlNode rootNode = xmlDoc.CreateElement("Activités");
	 xmlDoc.AppendChild (rootNode);


	 ////////////Activités//////////// Serialise les attributs de la classe Activités
	 XmlNode Activites=xmlDoc.CreateElement("Activites");
	 rootNode.AppendChild (Activites);

	 XmlNode hDebut= xmlDoc.CreateElement ("heureDebut");
	 hDebut.InnerText = getHeureDebut.ToString();
	 Activites.AppendChild(hDebut);

	 XmlNode hFin = xmlDoc.CreateElement("heureFin"); 


	 hFin.InnerText = GetheureFin.ToString();
	 Activites.AppendChild(hFin);

	 XmlNode txtDescriptif = xmlDoc.CreateElement("texteDescriptif"); 
	 txtDescriptif.InnerText = GettexteDescriptif;
     Activites.AppendChild(txtDescriptif);

	 XmlNode typeActivity = xmlDoc.CreateElement("typeActivite"); 
	 typeActivity.InnerText = GettypeActivite;
	 Activites.AppendChild(typeActivity);

	 XmlNode statutDeActivite = xmlDoc.CreateElement("statutActivite"); 
	 statutDeActivite.InnerText = GetstatutActivite;
	 Activites.AppendChild(statutDeActivite);

     XmlNode NomActivite = xmlDoc.CreateElement("nomActivité");
     NomActivite.InnerText = GetnomActivite;
     Activites.AppendChild(NomActivite);

     XmlNode NombreActivite = xmlDoc.CreateElement("NombreActivites");
     NombreActivite.InnerText = GetnbActivité.ToString();
     Activites.AppendChild(NombreActivite);

     XmlNode listeDesAstronauteDansActivite = xmlDoc.CreateElement("Astronautes"); 
     Activites.AppendChild(listeDesAstronauteDansActivite);

   
     foreach (Astronautes A in listeAstronautes)
     {
         XmlNode cosmonautes = xmlDoc.CreateElement("Astronaute");
         Activites.AppendChild(cosmonautes);

         XmlNode idCosmonaute = xmlDoc.CreateElement("ID");
         idCosmonaute.InnerText = A.GetidAstronaute.ToString();
         cosmonautes.AppendChild(idCosmonaute);

         XmlNode nomCosmonaute = xmlDoc.CreateElement("Nom");
         nomCosmonaute.InnerText = A.GetnomAstronaute;
         cosmonautes.AppendChild(nomCosmonaute);

         XmlNode prenomCosmonaute = xmlDoc.CreateElement("Prenom");
         prenomCosmonaute.InnerText = A.GetprenomAstronaute;
         cosmonautes.AppendChild(prenomCosmonaute);

         XmlNode ageCosmonaute = xmlDoc.CreateElement("Age");
         ageCosmonaute.InnerText = A.GetageAstronaute.ToString();
         cosmonautes.AppendChild(ageCosmonaute);

         XmlNode NombreCosmonautes = xmlDoc.CreateElement("Nombre des astronautes");
         NombreCosmonautes.InnerText = A.GetnbAstronaute.ToString();
         cosmonautes.AppendChild(NombreCosmonautes);
     }
	////////////\Activites///////////

    ////////////Planning////////////


    ////////////\Planning///////////

 }
}

